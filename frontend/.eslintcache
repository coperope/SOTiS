[{"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\index.js":"1","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\App.js":"2","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\ListTests\\ListTests.tsx":"4","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Login\\Login.js":"5","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Register\\Register.js":"6","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Header\\Header.js":"7","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\TestView.tsx":"8","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\utils\\apiUrls.tsx":"9","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\utils\\authUtils.tsx":"10","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\hooks\\useFetch.tsx":"11","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestAccordion\\TestAccordion.tsx":"12","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\styles.ts":"13","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\Question\\Question.tsx":"14","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestAccordion\\styles.tsx":"15","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\Question\\styles.ts":"16","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\CreateTest.tsx":"17","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\NewQuestion\\NewQuestion.tsx":"18","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\NewQuestion\\styles.ts":"19","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\index.js":"20","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\App.js":"21","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\reportWebVitals.js":"22","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Login\\Login.js":"23","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\ListTests\\ListTests.tsx":"24","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\CreateTest.tsx":"25","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Register\\Register.js":"26","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Header\\Header.js":"27","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\TestView.tsx":"28","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\utils\\apiUrls.tsx":"29","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\utils\\authUtils.tsx":"30","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\hooks\\useFetch.tsx":"31","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestAccordion\\TestAccordion.tsx":"32","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\NewQuestion.tsx":"33","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\styles.ts":"34","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\Question\\Question.tsx":"35","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\styles.ts":"36","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\NewAnswer\\NewAnswer.tsx":"37","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestAccordion\\styles.tsx":"38","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\Question\\styles.ts":"39"},{"size":470,"mtime":1606165537134,"results":"40","hashOfConfig":"41"},{"size":1626,"mtime":1606864229880,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1606049929033,"results":"43","hashOfConfig":"41"},{"size":1689,"mtime":1606854276194,"results":"44","hashOfConfig":"41"},{"size":3764,"mtime":1606854276196,"results":"45","hashOfConfig":"41"},{"size":7495,"mtime":1606772205258,"results":"46","hashOfConfig":"41"},{"size":7404,"mtime":1606862329915,"results":"47","hashOfConfig":"41"},{"size":3675,"mtime":1606862329920,"results":"48","hashOfConfig":"41"},{"size":422,"mtime":1606862329925,"results":"49","hashOfConfig":"41"},{"size":684,"mtime":1606854276206,"results":"50","hashOfConfig":"41"},{"size":1827,"mtime":1606864106944,"results":"51","hashOfConfig":"41"},{"size":1823,"mtime":1606863989070,"results":"52","hashOfConfig":"41"},{"size":755,"mtime":1606864025658,"results":"53","hashOfConfig":"41"},{"size":3506,"mtime":1606862329917,"results":"54","hashOfConfig":"41"},{"size":573,"mtime":1606759845325,"results":"55","hashOfConfig":"41"},{"size":922,"mtime":1606862329918,"results":"56","hashOfConfig":"41"},{"size":4528,"mtime":1606874633225,"results":"57","hashOfConfig":"41"},{"size":2875,"mtime":1606874638609,"results":"58","hashOfConfig":"41"},{"size":922,"mtime":1606870375450,"results":"59","hashOfConfig":"41"},{"size":470,"mtime":1606165537134,"results":"60","hashOfConfig":"61"},{"size":1626,"mtime":1606864229880,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":1606049929033,"results":"63","hashOfConfig":"61"},{"size":3764,"mtime":1606854276196,"results":"64","hashOfConfig":"61"},{"size":1689,"mtime":1606854276194,"results":"65","hashOfConfig":"61"},{"size":6671,"mtime":1606917413583,"results":"66","hashOfConfig":"61"},{"size":7495,"mtime":1606772205258,"results":"67","hashOfConfig":"61"},{"size":7573,"mtime":1606914148596,"results":"68","hashOfConfig":"61"},{"size":3675,"mtime":1606862329920,"results":"69","hashOfConfig":"61"},{"size":520,"mtime":1606912079581,"results":"70","hashOfConfig":"61"},{"size":684,"mtime":1606854276206,"results":"71","hashOfConfig":"61"},{"size":1827,"mtime":1606864106944,"results":"72","hashOfConfig":"61"},{"size":1823,"mtime":1606863989070,"results":"73","hashOfConfig":"61"},{"size":4187,"mtime":1606917555955,"results":"74","hashOfConfig":"61"},{"size":755,"mtime":1606864025658,"results":"75","hashOfConfig":"61"},{"size":3506,"mtime":1606862329917,"results":"76","hashOfConfig":"61"},{"size":1042,"mtime":1606911396526,"results":"77","hashOfConfig":"61"},{"size":1890,"mtime":1606916841359,"results":"78","hashOfConfig":"61"},{"size":573,"mtime":1606759845325,"results":"79","hashOfConfig":"61"},{"size":922,"mtime":1606862329918,"results":"80","hashOfConfig":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"184ghvd",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vpedp5",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\index.js",[],["165","166"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\App.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\ListTests\\ListTests.tsx",[],["167","168"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Login\\Login.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Register\\Register.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\Header\\Header.js",["169"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n/* import Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup'; */\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport './Header.css'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport { Link } from 'react-router-dom'\r\nimport { getUserPermission, getUser, logout } from '../../utils/authUtils';\r\nimport { useHistory } from 'react-router';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  barColor: {\r\n    background: '#64b5f6',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  }\r\n}));\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorElProfile, setanchorElProfile] = React.useState(null);\r\n  const openProfileMenu = Boolean(anchorElProfile);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    if (getUser()) {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  /*   const handleChange = (event) => {\r\n      setAuth(event.target.checked);\r\n    };\r\n   */\r\n  const handleMenuProfile = (event) => {\r\n    setanchorElProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setanchorElProfile(null);\r\n  };\r\n  const logOut = () => {\r\n    handleClose();\r\n    logout();\r\n    redirect('login');\r\n  };\r\n  const redirect = (path) => {\r\n    handleClose();\r\n    history.push(\"/\" + path);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*       <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\r\n          label={auth ? 'Logout' : 'Login'}\r\n        />\r\n      </FormGroup> */}\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.barColor }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Examinator\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenuProfile}\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                className={clsx(classes.menuButton)}\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-links\"\r\n                anchorEl={anchorElProfile}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={openProfileMenu}\r\n                onClose={handleClose}\r\n              >\r\n                {!getUser() &&\r\n                  <div>\r\n                    <MenuItem onClick={() => redirect('login')}>Log in</MenuItem>\r\n                    <MenuItem onClick={() => redirect('register')}>Register</MenuItem>\r\n                  </div>\r\n                }\r\n                {getUser() &&\r\n                  <div>\r\n                    <MenuItem onClick={() => redirect('account')}>My account</MenuItem>\r\n                    <MenuItem onClick={logOut}>Log out</MenuItem>\r\n                  </div>\r\n                }\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {getUser() &&\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Examinator\r\n          </Typography>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          {getUserPermission() === 0 &&\r\n            <List>\r\n              {['My tests', 'All tests'].map((text, index) => (\r\n                <ListItem button key={text} component={Link} to={index % 2 === 0 ? '/myTests' : '/student/tests'}>\r\n                  <ListItemIcon>{index % 2 === 0 ? <AssignmentIcon /> : <LocalLibraryIcon />}</ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          }\r\n          {getUserPermission() === 1 &&\r\n            <List>\r\n              {['Create test', 'All tests'].map((text, index) => (\r\n                <ListItem button key={text} component={Link} to={index % 2 === 0 ? '/createTest' : '/student/tests'}>\r\n                  <ListItemIcon>{index % 2 === 0 ? <AssignmentIcon /> : <LocalLibraryIcon />}</ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          }\r\n          <Divider />\r\n          <List>\r\n            {['Status'].map((text, index) => (\r\n              <ListItem button key={text} >\r\n                <ListItemIcon>{<SchoolIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\TestView.tsx",["170","171","172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport QuestionView from './Question/Question'\r\nimport {\r\n  BASE_URL,\r\n  GET_SINGLE_TEST_STUDENT,\r\n  SUBMIT_TEST,\r\n} from '../../utils/apiUrls';\r\nimport { getToken } from '../../utils/authUtils';\r\n\r\nimport { getUser } from '../../utils/authUtils';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nimport { useStyles } from './styles'\r\n\r\ninterface ParamTypes {\r\n  testId: string\r\n}\r\n\r\nexport interface TestData {\r\n  testId: string,\r\n  title: string,\r\n  description: string,\r\n  professor: any,\r\n  questions: Array<Question>,\r\n  completed: boolean\r\n}\r\n\r\nexport interface Question {\r\n  questionId: string,\r\n  text: string,\r\n  answers: Array<Answer>,\r\n  selectedAnswers: Array<Answer>\r\n}\r\n\r\nexport interface Answer {\r\n  answerId: string,\r\n  text: string,\r\n  correct: boolean,\r\n}\r\n\r\nconst submit = async (test: TestData) => {\r\n  try {\r\n    const token = getToken();\r\n    const options = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"post\",\r\n      body: JSON.stringify({test: test}),\r\n    }\r\n    const response = await fetch(BASE_URL + GET_SINGLE_TEST_STUDENT(getUser().id, test.testId), options);\r\n    const result = await response.json();\r\n    return response.ok\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst TestView = () => {\r\n  const classes = useStyles();\r\n  const { testId } = useParams<ParamTypes>();\r\n  const { data, executeFetch, hasError } = useFetch(BASE_URL + GET_SINGLE_TEST_STUDENT(getUser().id, testId), \"get\");\r\n\r\n  const [test, setTest] = useState<TestData>(data?.test);\r\n\r\n  useEffect(() => {\r\n    setTest(data?.test);\r\n  }, [data]);\r\n  console.log(test);\r\n\r\n  const submitTest = async () => {\r\n    const submitedTest = JSON.parse(JSON.stringify(test))\r\n    const success = await submit(submitedTest);\r\n    console.log(success);\r\n    if (success) {\r\n      executeFetch(BASE_URL + GET_SINGLE_TEST_STUDENT(getUser().id, testId), \"get\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            {test?.title}\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.description}>\r\n            {test?.description}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container\r\n          spacing={3}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ paddingTop: \"3em\" }} >\r\n\r\n          {test?.questions.map((question: Question) => (\r\n            <Grid item xs={8} key={question.questionId} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n              <QuestionView\r\n                questionId={question.questionId}\r\n                text={question.text}\r\n                answers={question.answers}\r\n                selectedAnswers={question.selectedAnswers}\r\n                completed={test.completed}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Grid container\r\n          spacing={3}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ paddingTop: \"6em\", paddingBottom: \"6em\" }} >\r\n          {!test?.completed && <Button onClick={submitTest} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n            Finish test\r\n          </Button>}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestView","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\utils\\apiUrls.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\utils\\authUtils.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\hooks\\useFetch.tsx",["174"],"import { useEffect, useState } from 'react';\r\nimport { getToken } from '../utils/authUtils';\r\n\r\nconst generateOptions =(\r\n  method: string,\r\n  body: object,\r\n  token: string | null\r\n) => {\r\n  let options = {};\r\n  if (method === \"get\"){\r\n    options = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n      },\r\n      method: method,\r\n    }\r\n  } else {\r\n    options = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: method,\r\n      body: JSON.stringify(body),\r\n    }\r\n  }\r\n  \r\n  return options;\r\n}\r\n\r\nconst useFetch = (\r\n  url?: string,\r\n  method: string = \"get\",\r\n  body?: any\r\n  ) => {\r\n\r\n  const [data, setData] = useState<any>(null);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const executeFetch = async (\r\n    url: string,\r\n    method: string = \"get\",\r\n    body?: any\r\n  ) => {\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const token = getToken();\r\n      const options = generateOptions(method, body, token);\r\n\r\n      const response = await fetch(url, options);\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        setData(result);\r\n      } else {\r\n        setHasError(true);\r\n        setErrorMessage(result);\r\n      }\r\n    } catch (error) {\r\n      setHasError(true);\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(url) {\r\n      executeFetch(url, method, body);\r\n    }\r\n  }, [url]);\r\n\r\n  return {\r\n    data,\r\n    isLoading,\r\n    hasError,\r\n    errorMessage,\r\n    executeFetch,\r\n  };\r\n};\r\n\r\nexport default useFetch;","C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestAccordion\\TestAccordion.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\styles.ts",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\Question\\Question.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestAccordion\\styles.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\TestView\\Question\\styles.ts",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\CreateTest.tsx",["175"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\NewQuestion\\NewQuestion.tsx",["176","177","178","179"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\frontend\\src\\components\\CreateTest\\NewQuestion\\styles.ts",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\index.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\App.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Login\\Login.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\ListTests\\ListTests.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\CreateTest.tsx",["180"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Register\\Register.js",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\Header\\Header.js",["181"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\TestView.tsx",["182","183","184","185"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\utils\\apiUrls.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\utils\\authUtils.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\hooks\\useFetch.tsx",["186"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestAccordion\\TestAccordion.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\NewQuestion.tsx",["187","188"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\styles.ts",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\Question\\Question.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\styles.ts",[],["189","190"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\CreateTest\\NewQuestion\\NewAnswer\\NewAnswer.tsx",["191","192","193","194"],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestAccordion\\styles.tsx",[],"C:\\Users\\Petar\\Desktop\\Faks_razno\\MASTER\\SOTiS\\SOTiS\\Frontend\\src\\components\\TestView\\Question\\styles.ts",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":69,"column":16,"nodeType":"201","messageId":"202","endLine":69,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"203","severity":1,"message":"205","line":10,"column":3,"nodeType":"201","messageId":"202","endLine":10,"endColumn":14},{"ruleId":"203","severity":1,"message":"206","line":58,"column":11,"nodeType":"201","messageId":"202","endLine":58,"endColumn":17},{"ruleId":"203","severity":1,"message":"207","line":68,"column":31,"nodeType":"201","messageId":"202","endLine":68,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":76,"column":6,"nodeType":"210","endLine":76,"endColumn":11,"suggestions":"211"},{"ruleId":"208","severity":1,"message":"212","line":93,"column":6,"nodeType":"210","endLine":93,"endColumn":17,"suggestions":"213"},{"ruleId":"203","severity":1,"message":"214","line":4,"column":16,"nodeType":"201","messageId":"202","endLine":4,"endColumn":26},{"ruleId":"203","severity":1,"message":"215","line":4,"column":28,"nodeType":"201","messageId":"202","endLine":4,"endColumn":36},{"ruleId":"203","severity":1,"message":"216","line":24,"column":9,"nodeType":"201","messageId":"202","endLine":24,"endColumn":18},{"ruleId":"208","severity":1,"message":"217","line":33,"column":6,"nodeType":"210","endLine":33,"endColumn":15,"suggestions":"218"},{"ruleId":"208","severity":1,"message":"212","line":100,"column":6,"nodeType":"210","endLine":100,"endColumn":17,"suggestions":"219"},{"ruleId":"199","severity":1,"message":"200","line":70,"column":16,"nodeType":"201","messageId":"202","endLine":70,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"203","severity":1,"message":"205","line":10,"column":3,"nodeType":"201","messageId":"202","endLine":10,"endColumn":14},{"ruleId":"203","severity":1,"message":"206","line":58,"column":11,"nodeType":"201","messageId":"202","endLine":58,"endColumn":17},{"ruleId":"203","severity":1,"message":"207","line":68,"column":31,"nodeType":"201","messageId":"202","endLine":68,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":76,"column":6,"nodeType":"210","endLine":76,"endColumn":11,"suggestions":"220"},{"ruleId":"203","severity":1,"message":"214","line":5,"column":16,"nodeType":"201","messageId":"202","endLine":5,"endColumn":26},{"ruleId":"208","severity":1,"message":"217","line":39,"column":6,"nodeType":"210","endLine":39,"endColumn":15,"suggestions":"221"},{"ruleId":"195","replacedBy":"222"},{"ruleId":"197","replacedBy":"223"},{"ruleId":"203","severity":1,"message":"224","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"225","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"203","severity":1,"message":"226","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"214","line":5,"column":16,"nodeType":"201","messageId":"202","endLine":5,"endColumn":26},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'ExpandMoreIcon' is defined but never used.","'SUBMIT_TEST' is defined but never used.","'result' is assigned a value but never used.","'hasError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'body' and 'method'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array. You can also do a functional update 'setTest(t => ...)' if you only need 'test' in the 'setTest' call.",["230"],"'Typography' is defined but never used.","'Checkbox' is defined but never used.","'addAnswer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'question?.Answers'. Either include it or remove the dependency array.",["231"],["232"],["233"],["234"],["227"],["228"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Question' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"235","fix":"242"},{"desc":"239","fix":"243"},"Update the dependencies array to be: [body, method, url]",{"range":"244","text":"245"},"Update the dependencies array to be: [questions, test]",{"range":"246","text":"247"},"Update the dependencies array to be: [answers, question?.Answers]",{"range":"248","text":"249"},{"range":"250","text":"247"},{"range":"251","text":"245"},{"range":"252","text":"249"},[1688,1693],"[body, method, url]",[2039,2050],"[questions, test]",[930,939],"[answers, question?.Answers]",[2279,2290],[1688,1693],[1153,1162]]